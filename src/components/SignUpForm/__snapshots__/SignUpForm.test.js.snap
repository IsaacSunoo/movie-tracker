// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignUpForm should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUpForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          onSubmit={[Function]}
        >
          <label>
            Name:
            <input
              name="name"
              onChange={[Function]}
              type="text"
              value=""
            />
          </label>
          <label>
            Email:
            <input
              name="email"
              onChange={[Function]}
              type="email"
              value=""
            />
          </label>
          <label>
            Password:
            <input
              name="password"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>
          <button
            type="submit"
          >
            Create Account
          </button>
        </form>,
        <div
          className="pointer"
          onClick={[Function]}
        >
          Return to Login
        </div>,
      ],
      "className": "sign-up-form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Name:
              <input
                name="name"
                onChange={[Function]}
                type="text"
                value=""
              />
            </label>,
            <label>
              Email:
              <input
                name="email"
                onChange={[Function]}
                type="email"
                value=""
              />
            </label>,
            <label>
              Password:
              <input
                name="password"
                onChange={[Function]}
                type="password"
                value=""
              />
            </label>,
            <button
              type="submit"
            >
              Create Account
            </button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Name:",
                <input
                  name="name"
                  onChange={[Function]}
                  type="text"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Name:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "name",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Email:",
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Email:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "email",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Password:",
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Password:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create Account",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Create Account",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Return to Login",
          "className": "pointer",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Return to Login",
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            onSubmit={[Function]}
          >
            <label>
              Name:
              <input
                name="name"
                onChange={[Function]}
                type="text"
                value=""
              />
            </label>
            <label>
              Email:
              <input
                name="email"
                onChange={[Function]}
                type="email"
                value=""
              />
            </label>
            <label>
              Password:
              <input
                name="password"
                onChange={[Function]}
                type="password"
                value=""
              />
            </label>
            <button
              type="submit"
            >
              Create Account
            </button>
          </form>,
          <div
            className="pointer"
            onClick={[Function]}
          >
            Return to Login
          </div>,
        ],
        "className": "sign-up-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Name:
                <input
                  name="name"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
              </label>,
              <label>
                Email:
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value=""
                />
              </label>,
              <label>
                Password:
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                  value=""
                />
              </label>,
              <button
                type="submit"
              >
                Create Account
              </button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Name:",
                  <input
                    name="name"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Name:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "name",
                    "onChange": [Function],
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Email:",
                  <input
                    name="email"
                    onChange={[Function]}
                    type="email"
                    value=""
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Email:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "email",
                    "onChange": [Function],
                    "type": "email",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Password:",
                  <input
                    name="password"
                    onChange={[Function]}
                    type="password"
                    value=""
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Password:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "password",
                    "onChange": [Function],
                    "type": "password",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Create Account",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Create Account",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Return to Login",
            "className": "pointer",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Return to Login",
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
